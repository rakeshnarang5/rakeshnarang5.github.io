{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/forgot-password/forgot-password.component.html","./src/app/form/form.component.html","./src/app/home/home.component.html","./src/app/login/login.component.html","./src/app/register/register.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/forgot-password/forgot-password.component.css","./src/app/forgot-password/forgot-password.component.ts","./src/app/form/form.component.css","./src/app/form/form.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/models/loginDetails.model.ts","./src/app/models/recoveryDetails.model.ts","./src/app/models/salary-details.model.ts","./src/app/models/user.model.ts","./src/app/register/register.component.css","./src/app/register/register.component.ts","./src/app/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<router-outlet></router-outlet>\"","export default \"<div class=\\\"app-body\\\">\\n        <main class=\\\"main d-flex align-items-center\\\">\\n          <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 mx-auto\\\">\\n                <div class=\\\"card mx-4\\\">\\n                  <div class=\\\"card-body p-4\\\">\\n                    <form>\\n                      <h1>Recover Password</h1>\\n                      <p class=\\\"text-muted\\\">Enter your username and security answer</p>\\n                      <div class=\\\"input-group mb-3\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"recoveryDetails.username\\\" [ngModelOptions]=\\\"{standalone: true}\\\" autocomplete=\\\"username\\\" required>\\n                      </div>\\n                    \\n                    \\n\\n                      <!-- security question -->\\n                      <div class=\\\"input-group mb-4\\\">\\n                          <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                          </div>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"What is the name of your First Employer? (Answer to this question will be used to recover your password)\\\" [(ngModel)]=\\\"recoveryDetails.securityAnswer\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  required>\\n                        </div>\\n\\n                      <button type=\\\"button\\\" (click)=\\\"recover()\\\" class=\\\"btn btn-block btn-success\\\">Recover Password</button>\\n                    </form>\\n                  </div>\\n                 \\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </main>\\n      </div>\\n      \"","export default \"<p>form works!</p>\\n\"","export default \"<div class=\\\"app-body\\\">\\n    <main class=\\\"main d-flex align-items-center\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12 mx-auto\\\">\\n                    <div class=\\\"card mx-4\\\">\\n                        <div class=\\\"card-body p-4\\\">\\n                            <form>\\n                                <h1>In hand salary calculator</h1>\\n                                <p class=\\\"text-muted\\\">Calculate your in hand salary.</p>\\n\\n                                <!--ctc input-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Total CTC:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                                        placeholder=\\\"enter your total cost to company\\\" [(ngModel)]=\\\"salaryDetails.ctc\\\"\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" (ngModelChange)=\\\"ctcChange($event)\\\"\\n                                        required>\\n                                </div>\\n\\n                                <!--basic input-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Monthly Basic Salary:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"enter your basic salary\\\"\\n                                        [(ngModel)]=\\\"salaryDetails.basic\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                        [disabled]=\\\"true\\\" (ngModelChange)=\\\"basicChange()\\\" required>\\n                                </div>\\n\\n                                <!--annual basic input-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Annual Basic Salary:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"annual basic salary\\\"\\n                                        [(ngModel)]=\\\"salaryDetails.annualBasic\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                        [disabled]=\\\"true\\\" required>\\n                                </div>\\n\\n                                <!--annual gratuity-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Annual Gratuity:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"salaryDetails.gratuity\\\"\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"true\\\" required>\\n                                </div>\\n\\n                                <!--min basic checkbox-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Calculate PF on minimum basic salary?</span>\\n                                    </div>\\n                                    <input type=\\\"checkbox\\\" class=\\\"form-control\\\"\\n                                        [(ngModel)]=\\\"salaryDetails.calcOnMinBasic\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                        (ngModelChange)=\\\"calcOnMinBasic()\\\" required>\\n                                </div>\\n\\n                                <!--employer epf-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Annual Employer's EPF:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                                        placeholder=\\\"enter employer's contribution to epf\\\"\\n                                        [(ngModel)]=\\\"salaryDetails.epfEmployer\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                        [disabled]=\\\"true\\\" required>\\n                                </div>\\n\\n                                <!-- monthly employer epf-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Monthly Employer's EPF:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                                        placeholder=\\\"enter employer's contribution to epf\\\"\\n                                        [(ngModel)]=\\\"salaryDetails.monthlyEpfEmployer\\\"\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"true\\\" required>\\n                                </div>\\n\\n                                <!--employee epf-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Annual Employee's EPF:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                                        placeholder=\\\"enter employee's contribution to epf\\\"\\n                                        [(ngModel)]=\\\"salaryDetails.epfEmployee\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                        [disabled]=\\\"true\\\" required>\\n                                </div>\\n\\n                                <!--monthly epf-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Monthly Employee's EPF:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                                        placeholder=\\\"enter employee's contribution to epf\\\"\\n                                        [(ngModel)]=\\\"salaryDetails.monthlyEpfEmployee\\\"\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"true\\\" required>\\n                                </div>\\n\\n                                <!--hra-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Annual HRA in CTC:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"salaryDetails.hra\\\"\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"true\\\" required>\\n                                </div>\\n\\n                                <!--hra-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Monthly HRA in CTC:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"salaryDetails.hraMonthly\\\"\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"true\\\" required>\\n                                </div>\\n\\n                                <!--live in a metro checkbox-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Do you live in a metro city? (e.g. Delhi,\\n                                            Mumbai)</span>\\n                                    </div>\\n                                    <input type=\\\"checkbox\\\" class=\\\"form-control\\\"\\n                                        [(ngModel)]=\\\"salaryDetails.metroResident\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                        (ngModelChange)=\\\"metroResident()\\\" required>\\n                                </div>\\n\\n                                <!--actual rent paid-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Actual Rent Paid:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                                        placeholder=\\\"enter the rent that you actually paid\\\"\\n                                        [(ngModel)]=\\\"salaryDetails.rentPaid\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                        (ngModelChange)=\\\"rentPaidChange()\\\" required>\\n                                </div>\\n\\n                                <!--annual hra exemption-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Annual HRA Exemption:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"salaryDetails.hraExemption\\\"\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"true\\\" required>\\n                                </div>\\n\\n                                <!--opted for mediclaim?-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Have you opted for a mediclaim policy?</span>\\n                                    </div>\\n                                    <input type=\\\"checkbox\\\" class=\\\"form-control\\\"\\n                                        [(ngModel)]=\\\"salaryDetails.optedForMediclaim\\\"\\n                                        (ngModelChange)=\\\"optedForMediclaim()\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                        required>\\n                                </div>\\n\\n                                <div *ngIf=\\\"salaryDetails.optedForMediclaim\\\" style=\\\"margin: 0 auto\\\">\\n\\n                                    <div style=\\\"margin-left: 50px\\\">\\n                                        <!--mediclaim annual-->\\n                                        <div class=\\\"input-group mb-3\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\">Annual mediclaim premium amount:</span>\\n                                            </div>\\n                                            <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                                                [(ngModel)]=\\\"salaryDetails.annualMediclaimAmount\\\"\\n                                                placeholder=\\\"enter annual mediclaim amount\\\"\\n                                                (ngModelChange)=\\\"annualMediclaimAmount()\\\"\\n                                                [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div style=\\\"margin-left: 50px\\\">\\n                                        <!--mediclaim monthly-->\\n                                        <div class=\\\"input-group mb-3\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\">Monthly mediclaim premium amount:</span>\\n                                            </div>\\n                                            <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                                                [(ngModel)]=\\\"salaryDetails.monthlyMediclaimAmount\\\" [disabled]=\\\"true\\\"\\n                                                [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                                        </div>\\n                                    </div>\\n\\n\\n                                </div>\\n\\n                                <!--80c-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">80C Investment Details:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"salaryDetails.invest80C\\\"\\n                                        placeholder=\\\"enter 80C investment details\\\"\\n                                        (ngModelChange)=\\\"invest80CChange($event)\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                        required>\\n                                </div>\\n\\n                                <!--maximize 80c-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Do you want to maximize your 80C\\n                                            investments?</span>\\n                                    </div>\\n                                    <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"salaryDetails.maximize80C\\\"\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" (ngModelChange)=\\\"maximize80C()\\\" required>\\n                                </div>\\n\\n                                <!--food coupons-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Does your company offer food coupon\\n                                            benefits?</span>\\n                                    </div>\\n                                    <input type=\\\"checkbox\\\" class=\\\"form-control\\\"\\n                                        [(ngModel)]=\\\"salaryDetails.foodCouponsAvailable\\\"\\n                                        (ngModelChange)=\\\"foodCouponsAvailable()\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                        required>\\n                                </div>\\n\\n                                <div *ngIf=\\\"salaryDetails.foodCouponsAvailable\\\" style=\\\"margin: 0 auto\\\">\\n\\n                                    <div style=\\\"margin-left: 50px\\\">\\n                                        <!--food coupons-->\\n                                        <div class=\\\"input-group mb-3\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\">Would you like to opt for food\\n                                                    coupons?</span>\\n                                            </div>\\n                                            <input type=\\\"checkbox\\\" class=\\\"form-control\\\"\\n                                                [(ngModel)]=\\\"salaryDetails.foodCouponsOpted\\\"\\n                                                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                                (ngModelChange)=\\\"foodCouponsOpted()\\\" required>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div style=\\\"margin-left: 50px\\\">\\n                                        <!--tax-->\\n                                        <div class=\\\"input-group mb-3\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\">Food Coupons Deduction:</span>\\n                                            </div>\\n                                            <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                                                [(ngModel)]=\\\"salaryDetails.foodCouponsDeduction\\\"\\n                                                [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"true\\\" required>\\n                                        </div>\\n                                    </div>\\n\\n                                </div>\\n\\n                                <!--###-->\\n                                <!--CAR LEASE SECTION-->\\n                                <!--###-->\\n\\n                                <!--CAR LEASE-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Does your company offer car lease benefit?</span>\\n                                    </div>\\n                                    <input type=\\\"checkbox\\\" class=\\\"form-control\\\"\\n                                        [(ngModel)]=\\\"salaryDetails.carLeaseAvailable\\\"\\n                                        (ngModelChange)=\\\"carLeaseAvailable()\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                        required>\\n                                </div>\\n\\n                                <div *ngIf=\\\"salaryDetails.carLeaseAvailable\\\" style=\\\"margin: 0 auto\\\">\\n\\n                                    <div style=\\\"margin-left: 50px\\\">\\n                                        <!--CAR RENTAL AMOUNT-->\\n                                        <div class=\\\"input-group mb-3\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\">Car rental amount (monthly):</span>\\n                                            </div>\\n                                            <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                                                [(ngModel)]=\\\"salaryDetails.monthlyCarLeaseAmount\\\"\\n                                                [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                                (ngModelChange)=\\\"monthlyCarLeaseAmount()\\\" required>\\n                                        </div>\\n\\n                                        <!--CAR RENTAL AMOUNT-->\\n                                        <div class=\\\"input-group mb-3\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\">Car rental amount (yearly):</span>\\n                                            </div>\\n                                            <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                                                [(ngModel)]=\\\"salaryDetails.yearlyCarLeaseAmount\\\"\\n                                                [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div style=\\\"margin-left: 50px\\\">\\n                                        <!--DRIVER'S SALARY DEDUCTION-->\\n                                        <div class=\\\"input-group mb-3\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\">Driver's salary deduction\\n                                                    (monthly):</span>\\n                                            </div>\\n                                            <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                                                [(ngModel)]=\\\"salaryDetails.monthlyDriversSalaryAmount\\\"\\n                                                [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"true\\\" required>\\n                                        </div>\\n\\n                                        <!--DRIVER'S SALARY DEDUCTION-->\\n                                        <div class=\\\"input-group mb-3\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\">Driver's salary deduction\\n                                                    (yearly):</span>\\n                                            </div>\\n                                            <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                                                [(ngModel)]=\\\"salaryDetails.yearlyDriversSalaryAmount\\\"\\n                                                [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"true\\\" required>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div style=\\\"margin-left: 50px\\\">\\n                                        <!--FUEL AND MAINTAINENCE DEDUCTION-->\\n                                        <div class=\\\"input-group mb-3\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\">Fuel and maintainence deduction\\n                                                    (monthly):</span>\\n                                            </div>\\n                                            <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                                                [(ngModel)]=\\\"salaryDetails.monthlyFuelAndMaintainenceAmount\\\"\\n                                                [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"true\\\" required>\\n                                        </div>\\n\\n                                        <!--FUEL AND MAINTAINENCE DEDUCTION-->\\n                                        <div class=\\\"input-group mb-3\\\">\\n                                            <div class=\\\"input-group-prepend\\\">\\n                                                <span class=\\\"input-group-text\\\">Fuel and maintainence deduction\\n                                                    (yearly):</span>\\n                                            </div>\\n                                            <input type=\\\"number\\\" class=\\\"form-control\\\"\\n                                                [(ngModel)]=\\\"salaryDetails.yearlyFuelAndMaintainenceAmount\\\"\\n                                                [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"true\\\" required>\\n                                        </div>\\n                                    </div>\\n\\n                                </div>\\n\\n                                <!--tax-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\">Net Taxable Income:</span>\\n                                        </div>\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"tax\\\"\\n                                            [(ngModel)]=\\\"salaryDetails.netTaxableIncome\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                            [disabled]=\\\"true\\\" required>\\n                                    </div>\\n\\n                                <!--tax-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Tax:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"tax\\\"\\n                                        [(ngModel)]=\\\"salaryDetails.tax\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                        [disabled]=\\\"true\\\" required>\\n                                </div>\\n\\n                                <!--tax-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Monthly Tax:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"monthly tax\\\"\\n                                        [(ngModel)]=\\\"salaryDetails.monthlyTax\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                        [disabled]=\\\"true\\\" required>\\n                                </div>\\n\\n\\n                                <!--in hand-->\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Net In hand:</span>\\n                                    </div>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"net in hand\\\"\\n                                        [(ngModel)]=\\\"salaryDetails.inHand\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                        [disabled]=\\\"true\\\" required>\\n                                </div>\\n\\n\\n                                <button type=\\\"button\\\" (click)=\\\"submit()\\\"\\n                                    class=\\\"btn btn-block btn-success\\\">Submit</button>\\n                            </form>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </main>\\n</div>\"","export default \"<div class=\\\"app-body\\\">\\n    <main class=\\\"main d-flex align-items-center\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-8 mx-auto\\\">\\n            <div class=\\\"card-group\\\">\\n              <div class=\\\"card p-4\\\">\\n                <div class=\\\"card-body\\\">\\n                  <form>\\n                    <h1>Login</h1>\\n                    <p class=\\\"text-muted\\\">Sign In to your account</p>\\n                    <div class=\\\"input-group mb-3\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\n                      </div>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" autocomplete=\\\"username\\\" [(ngModel)]=\\\"loginDetails.username\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                    </div>\\n                    <div class=\\\"input-group mb-4\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                      </div>\\n                      <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" autocomplete=\\\"current-password\\\" [(ngModel)]=\\\"loginDetails.password\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-6\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\" (click)=\\\"login()\\\">Login</button>\\n                      </div>\\n                      <div class=\\\"col-6 text-right\\\">\\n                        <button  type=\\\"button\\\" class=\\\"btn btn-link px-0\\\" (click)=\\\"forgotPassword()\\\">Forgot password?</button>\\n                      </div>\\n                    </div>\\n                  </form>\\n                </div>\\n              </div>\\n              <div class=\\\"card text-white bg-primary py-5 d-md-down-none\\\" style=\\\"width:44%\\\">\\n                <div class=\\\"card-body text-center\\\">\\n                  <div>\\n                    <h2>Sign up</h2>\\n                    <p>Sign up right now to get a host of benefits. This is one the only websites that give you the best content.</p>\\n                    <button type=\\\"button\\\" (click)=\\\"register()\\\" class=\\\"btn btn-primary active mt-3\\\">Register Now!</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </main>\\n  </div>\\n  \"","export default \"<div class=\\\"app-body\\\">\\n        <main class=\\\"main d-flex align-items-center\\\">\\n          <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 mx-auto\\\">\\n                <div class=\\\"card mx-4\\\">\\n                  <div class=\\\"card-body p-4\\\">\\n                    <form>\\n                      <h1>Register</h1>\\n                      <p class=\\\"text-muted\\\">Create your account</p>\\n                      <div class=\\\"input-group mb-3\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"user.username\\\" [ngModelOptions]=\\\"{standalone: true}\\\" autocomplete=\\\"username\\\" required>\\n                      </div>\\n                      <div class=\\\"input-group mb-3\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">@</span>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" autocomplete=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                      </div>\\n                      <div class=\\\"input-group mb-3\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                        </div>\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" autocomplete=\\\"new-password\\\" [(ngModel)]=\\\"user.password\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                      </div>\\n                      <div class=\\\"input-group mb-4\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                        </div>\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Repeat password\\\" [(ngModel)]=\\\"user.repeatPassword\\\" [ngModelOptions]=\\\"{standalone: true}\\\" autocomplete=\\\"new-password\\\" required>\\n                      </div>\\n\\n                      <!-- security question -->\\n                      <div class=\\\"input-group mb-4\\\">\\n                          <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                          </div>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"What is the name of your First Employer? (Answer to this question will be used to recover your password)\\\" [(ngModel)]=\\\"user.firstEmployer\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  required>\\n                        </div>\\n\\n                      <button type=\\\"button\\\" (click)=\\\"register()\\\" class=\\\"btn btn-block btn-success\\\">Create Account</button>\\n                    </form>\\n                  </div>\\n                  <div class=\\\"card-footer p-4\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-6\\\">\\n                        <button class=\\\"btn btn-block btn-facebook\\\" type=\\\"button\\\"><span>facebook</span></button>\\n                      </div>\\n                      <div class=\\\"col-6\\\">\\n                        <button class=\\\"btn btn-block btn-twitter\\\" type=\\\"button\\\"><span>twitter</span></button>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </main>\\n      </div>\\n      \"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormComponent } from './form/form.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n\nconst appRoutes: Routes = [\n  { path: 'login', component: LoginComponent },\n  {path: 'form', component: FormComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'home', component: HomeComponent},\n  {path: 'forgot-password', component: ForgotPasswordComponent},\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    FormComponent,\n    RegisterComponent,\n    HomeComponent,\n    ForgotPasswordComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: false } // <-- debugging purposes only\n    ),\n    AppRoutingModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\nimport { RecoveryDetails } from '../models/recoveryDetails.model';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  recoveryDetails: RecoveryDetails;\n\n  constructor(private userService: UserService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.recoveryDetails = new RecoveryDetails();\n  }\n\n  recover(){\n    let password = this.userService.recoverPassword(this.recoveryDetails);\n    if(null == password){\n      return;\n    }\n    this.router.navigate([\"/login\"]);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0vZm9ybS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SalaryDetails } from '../models/salary-details.model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  salaryDetails: SalaryDetails;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.salaryDetails = new SalaryDetails();\n    this.salaryDetails.ctc = 0;\n    this.salaryDetails.basic = 0;\n    this.salaryDetails.annualBasic = 0;\n    this.salaryDetails.calcOnMinBasic = false;\n    this.salaryDetails.epfEmployer = 0;\n    this.salaryDetails.epfEmployee = 0;\n    this.salaryDetails.inHand = 0;\n    this.salaryDetails.tax = 0;\n    this.salaryDetails.monthlyEpfEmployer = 0;\n    this.salaryDetails.monthlyEpfEmployee = 0;\n    this.salaryDetails.hra = 0;\n    this.salaryDetails.metroResident = false;\n    this.salaryDetails.rentPaid = 0;\n    this.salaryDetails.hraMonthly = 0;\n    this.salaryDetails.hraExemption = 0;\n    this.salaryDetails.invest80C = 0;\n    this.salaryDetails.monthlyTax = 0;\n    this.salaryDetails.gratuity = 0;\n    this.salaryDetails.maximize80C = false;\n    this.salaryDetails.foodCouponsAvailable = false;\n    this.salaryDetails.foodCouponsOpted = false;\n    this.salaryDetails.foodCouponsDeduction = 0;\n    this.salaryDetails.carLeaseAvailable = false;\n    this.salaryDetails.optedForMediclaim = false;\n    this.salaryDetails.annualMediclaimAmount = 0;\n    this.salaryDetails.monthlyMediclaimAmount = 0;\n    this.resetCarLeaseDriversSalaryFuelAndMaintainence();\n    this.salaryDetails.netTaxableIncome=0;\n  }\n\n  ctcChange(val) {\n    this.salaryDetails.basic = (val * 0.4) / 12;\n    this.basicChange();\n  }\n\n  basicChange() {\n    if (!this.validateBasic()) {\n      this.salaryDetails.basic = (this.salaryDetails.ctc * 0.4) / 12;\n    }\n    this.salaryDetails.annualBasic = this.salaryDetails.basic * 12;\n    this.salaryDetails.gratuity = this.salaryDetails.annualBasic * 0.0481;\n    this.calcBasic();\n    this.calcHraAndExemption(this.salaryDetails.metroResident ? 0.5 : 0.4);\n    this.calcTax();\n    this.calcInHand();\n  }\n\n  calcHraAndExemption(rate) {\n    this.salaryDetails.hra = this.salaryDetails.annualBasic * rate;\n    this.salaryDetails.hraMonthly = this.salaryDetails.hra / 12;\n  }\n\n  validateBasic() {\n    if (this.salaryDetails.basic * 12 > this.salaryDetails.ctc) {\n      alert(\"Basic pay cannot be greater than 40% of Ctc: \" + (this.salaryDetails.ctc * 0.4) / 12);\n      return false;\n    }\n    return true;\n  }\n\n  calcOnMinBasic() {\n    this.calcBasic();\n    this.calcTax();\n    this.calcInHand();\n  }\n\n  calcBasic() {\n    if (this.salaryDetails.calcOnMinBasic && this.salaryDetails.basic >= 15000) {\n      this.salaryDetails.epfEmployee = 15000 * 0.12;\n      this.salaryDetails.epfEmployer = 15000 * 0.12;\n    } else {\n      this.salaryDetails.epfEmployee = this.salaryDetails.basic * 0.12;\n      this.salaryDetails.epfEmployer = this.salaryDetails.basic * 0.12;\n    }\n    this.salaryDetails.monthlyEpfEmployee = this.salaryDetails.epfEmployee;\n    this.salaryDetails.monthlyEpfEmployer = this.salaryDetails.epfEmployer;\n    this.salaryDetails.epfEmployee = this.salaryDetails.epfEmployee * 12;\n    this.salaryDetails.epfEmployer = this.salaryDetails.epfEmployer * 12;\n    this.salaryDetails.invest80C = this.salaryDetails.maximize80C ? 150000 : this.salaryDetails.epfEmployee;\n  }\n\n  calcTax() {\n    let netTaxable = this.salaryDetails.ctc - this.salaryDetails.yearlyCarLeaseAmount - this.salaryDetails.yearlyDriversSalaryAmount - this.salaryDetails.yearlyFuelAndMaintainenceAmount - this.salaryDetails.annualMediclaimAmount - this.salaryDetails.foodCouponsDeduction - this.salaryDetails.invest80C - this.salaryDetails.gratuity - this.salaryDetails.epfEmployer - this.salaryDetails.hraExemption - 40000;\n\n    if (netTaxable <= 500000) {\n      this.salaryDetails.tax = 0;\n    } else if (netTaxable > 500000 && netTaxable <= 1000000) {\n      this.salaryDetails.tax = 12500 + (netTaxable - 500000) * 0.2;\n    } else {\n      this.salaryDetails.tax = 12500 + 100000 + (netTaxable - 1000000) * 0.3;\n    }\n\n    this.salaryDetails.netTaxableIncome=netTaxable;\n    this.salaryDetails.monthlyTax = this.salaryDetails.tax / 12;\n\n  }\n\n  calcInHand() {\n    this.salaryDetails.inHand = (this.salaryDetails.ctc - this.salaryDetails.epfEmployee - this.salaryDetails.gratuity - this.salaryDetails.epfEmployer - this.salaryDetails.tax) / 12;\n  }\n\n  submit() {\n\n  }\n\n  metroResident() {\n    if (this.salaryDetails.metroResident) {\n      this.calcHraAndExemption(0.5);\n    } else {\n      this.calcHraAndExemption(0.4);\n    }\n    this.calcTax();\n    this.calcInHand();\n  }\n\n  rentPaidChange() {\n    let rentPaidMinus10Basic = 0;\n    if (this.salaryDetails.rentPaid != null && this.salaryDetails.rentPaid > 0) {\n      rentPaidMinus10Basic = (this.salaryDetails.rentPaid - (this.salaryDetails.basic * 0.1));\n    }\n    if (rentPaidMinus10Basic > 0 && rentPaidMinus10Basic < this.salaryDetails.hraMonthly) {\n      this.salaryDetails.hraExemption = rentPaidMinus10Basic * 12;\n      this.calcTax();\n      this.calcInHand();\n    } else if (rentPaidMinus10Basic > 0) {\n      this.salaryDetails.hraExemption = this.salaryDetails.hra;\n    } else {\n      this.salaryDetails.hraExemption = 0;\n    }\n    this.calcTax();\n    this.calcInHand();\n  }\n\n  invest80CChange(val) {\n    if (val > 150000) {\n      alert(\"80C Investments cannot be greater than 150000\");\n      this.salaryDetails.invest80C = 150000;\n    }\n    this.calcTax();\n    this.calcInHand();\n  }\n\n  maximize80C() {\n    if (this.salaryDetails.maximize80C) {\n      this.salaryDetails.invest80C = 150000;\n    } else {\n      this.salaryDetails.invest80C = this.salaryDetails.epfEmployee;\n    }\n    this.calcTax();\n    this.calcInHand();\n  }\n\n  foodCouponsOpted() {\n    if (this.salaryDetails.foodCouponsOpted) {\n      this.salaryDetails.foodCouponsDeduction = 2200 * 12;\n    } else {\n      this.salaryDetails.foodCouponsDeduction = 0;\n    }\n    this.calcTax();\n    this.calcInHand();\n  }\n\n  foodCouponsAvailable() {\n    this.salaryDetails.foodCouponsDeduction = 0;\n    this.salaryDetails.foodCouponsOpted = false;\n    this.calcTax();\n    this.calcInHand();\n  }\n\n  optedForMediclaim() {\n    if (!this.salaryDetails.optedForMediclaim) {\n      this.salaryDetails.monthlyMediclaimAmount = 0;\n      this.salaryDetails.annualMediclaimAmount = 0;\n    }\n    this.calcTax();\n    this.calcInHand();\n  }\n\n  annualMediclaimAmount() {\n    this.salaryDetails.monthlyMediclaimAmount = this.salaryDetails.annualMediclaimAmount / 12;\n    this.calcTax();\n    this.calcInHand();\n  }\n\n  carLeaseAvailable() {\n    if (!this.salaryDetails.carLeaseAvailable) {\n      this.resetCarLeaseDriversSalaryFuelAndMaintainence();\n    }\n    this.calcTax();\n    this.calcInHand();\n  }\n\n  resetCarLeaseDriversSalaryFuelAndMaintainence(){\n    this.salaryDetails.monthlyCarLeaseAmount = 0;\n    this.salaryDetails.monthlyDriversSalaryAmount = 0;\n    this.salaryDetails.monthlyFuelAndMaintainenceAmount = 0;\n    this.salaryDetails.yearlyCarLeaseAmount = 0;\n    this.salaryDetails.yearlyDriversSalaryAmount = 0;\n    this.salaryDetails.yearlyFuelAndMaintainenceAmount = 0;\n  }\n\n  monthlyCarLeaseAmount() {\n    if (this.salaryDetails.monthlyCarLeaseAmount > 0) {\n      this.salaryDetails.yearlyCarLeaseAmount = this.salaryDetails.monthlyCarLeaseAmount * 12;\n      this.salaryDetails.monthlyDriversSalaryAmount = 15000;\n      this.salaryDetails.yearlyDriversSalaryAmount = this.salaryDetails.monthlyDriversSalaryAmount * 12;\n      this.salaryDetails.monthlyFuelAndMaintainenceAmount = 15000;\n      this.salaryDetails.yearlyFuelAndMaintainenceAmount = this.salaryDetails.monthlyFuelAndMaintainenceAmount * 12;\n    } else {\n      this.resetCarLeaseDriversSalaryFuelAndMaintainence();\n    }\n    this.calcTax();\n    this.calcInHand();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginDetails } from '../models/loginDetails.model';\nimport { UserService } from '../user.service';\nimport { User } from '../models/user.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginDetails: LoginDetails;\n\n  constructor(private router: Router,\n    private userService: UserService) { \n    \n  }\n\n  ngOnInit() {\n    this.loginDetails = new LoginDetails();\n  }\n\n  register(){\n    console.log(\"register called\")\n    this.router.navigate(['/register']);\n  }\n\n  login(){\n    let user = this.userService.login(this.loginDetails);\n    if(user == null){\n      return;\n    }\n    this.router.navigate([\"/home\"]);\n  }\n\n  forgotPassword(){\n    this.router.navigate([\"/forgot-password\"]);\n  }\n\n}\n","export class LoginDetails{\n    username: string;\n    password: string;\n};","export class RecoveryDetails{\n    username: string;\n    securityAnswer: string;\n};","export class SalaryDetails {\n    ctc: number;\n    basic: number;\n    annualBasic: number;\n    calcOnMinBasic: boolean;\n    epfEmployer: number;\n    epfEmployee: number;\n    inHand: number;\n    tax: number;\n    monthlyEpfEmployer: number;\n    monthlyEpfEmployee: number;\n    hra: number;\n    metroResident: boolean;\n    rentPaid: number;\n    hraMonthly: number;\n    hraExemption: number;\n    invest80C: number;\n    monthlyTax: number;\n    gratuity: number;\n    maximize80C: boolean;\n    foodCouponsAvailable: boolean;\n    foodCouponsOpted: boolean;\n    foodCouponsDeduction: number;\n    carLeaseAvailable: boolean;\n    optedForMediclaim: boolean;\n    annualMediclaimAmount: number;\n    monthlyMediclaimAmount: number;\n    monthlyCarLeaseAmount: number;\n    monthlyDriversSalaryAmount: number;\n    monthlyFuelAndMaintainenceAmount: number;\n    yearlyCarLeaseAmount: number;\n    yearlyDriversSalaryAmount: number;\n    yearlyFuelAndMaintainenceAmount: number;\n    netTaxableIncome: number;\n}","export class User{\n    id: number;\n    username: string;\n    email: string;\n    password: string;\n    repeatPassword: string;\n    firstEmployer: string;\n};","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  user: User;\n\n  constructor(private userService: UserService,\n    private router: Router) { \n    if(null==this.user){\n      this.user = new User();\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  register() {\n    if(!this.validatePassword()){\n      alert(\"Passwords do not match.\");\n      return;\n    }\n    console.log(this.user);\n    this.userService.createUser(this.user);\n    alert(\"User created successfully.\");\n    this.router.navigate([\"/login\"]);\n  }\n\n  validatePassword(){\n    return this.user.password === this.user.repeatPassword;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { User } from './models/user.model';\nimport { LoginDetails } from './models/loginDetails.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  recoverPassword(recoveryDetails: import(\"./models/recoveryDetails.model\").RecoveryDetails) {\n    let user = this.findUserByName(recoveryDetails.username);\n    console.log(user);\n    if(user.length === 0){\n      alert(\"User doesn't exist.\");\n      return null;\n    } \n    console.log(\"reacher 1\")\n    console.log(\"user[0].firstEmployer: \"  + user[0].firstEmployer)\n    console.log(\"recoveryDetails.securityAnswer: \"+recoveryDetails.securityAnswer)\n    console.log(user[0].firstEmployer === recoveryDetails.securityAnswer)\n      if(user[0].firstEmployer === recoveryDetails.securityAnswer){\n        console.log(\"reacher 2\")\n        alert(\"Password is: \" + user[0].password);\n        return user[0].password;\n      }\n    alert(\"Security answer is incorrect\");\n    return null;\n  }\n\n  allUsers: User[] = [];\n\n  constructor() { }\n\n  createUser(user: User){\n    this.allUsers.push(user);\n    console.log(this.allUsers);\n  }\n\n  login(loginDetails: LoginDetails){\n    let user = this.findUserByName(loginDetails.username);\n    if(user.length === 0){\n      alert(\"User doesn't exist.\");\n      return;\n    }\n    if(user.length >= 1) {\n      if(user[0].password !== loginDetails.password){\n        alert(\"Password is incorrect.\");\n        return null;\n      }\n      return user[0];\n    }\n    return null;\n  }\n\n  findUserByName(username){\n    return this.allUsers.filter(p => p.username === username);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}